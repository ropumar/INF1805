196 822 6 2 0 0 16 7 16
00 | 00000 0 track 0
00 | 00001 0
00 | 00002 0
00 | 00003 0
00 | 00004 0 track 1
00 | 00005 0
00 | 00006 0
00 | 00007 0
00 | 00008 0 track 2
00 | 00009 0
00 | 00010 0
00 | 00011 0
00 | 00012 0 track 3
00 | 00013 0
00 | 00014 0
00 | 00015 0
00 | 00016 0 track 4
00 | 00017 0
00 | 00018 0
00 | 00019 0
00 | 00020 0 track 5
00 | 00021 0
00 | 00022 0
00 | 00023 0
00 | 00024 0 track 6
00 | 00025 0
00 | 00026 0
00 | 00027 0
00 | 00028 0000 wClock 0
00 | 00029 0001
00 | 00030 0002
00 | 00031 0003
00 | 00032 0004
00 | 00033 0005
00 | 00034 0006
00 | 00035 0007
00 | 00036 0008 wClock 1
00 | 00037 0009
00 | 00038 0010
00 | 00039 0011
00 | 00040 0012
00 | 00041 0013
00 | 00042 0014
00 | 00043 0015
00 | 00044 0016 inEvt 005 : TEMP
00 | 00045 0017           : 01 gates
00 | 00046 0018
00 | 00047 0019
00 | 00048 0020 inEvt 006 : PHOTO
00 | 00049 0021           : 01 gates
00 | 00050 0022
00 | 00051 0023
00 | 00052 0024 inEvt 007 : VOLTS
00 | 00053 0025           : 01 gates
00 | 00054 0026
00 | 00055 0027
00 | 00056 0028 inEvt 041 : SEND_DONE
00 | 00057 0029           : 01 gates
00 | 00058 0030
00 | 00059 0031
00 | 00060 0032 inEvt 043 : SEND_DONE_ACK
00 | 00061 0033           : 01 gates
00 | 00062 0034
00 | 00063 0035
00 | 00064 0036 inEvt 044 : RECEIVE()
00 | 00065 0037           : 03 gates
00 | 00066 0038
00 | 00067 0039
00 | 00068 0040
00 | 00069 0041
00 | 00070 0042
00 | 00071 0043
00 | 00072 0044
00 | 00073 0045
00 | 00074 0046
00 | 00075 0047 inEvt 046 : Q_READY
00 | 00076 0048           : 01 gates
00 | 00077 0049
00 | 00078 0050
00 | 00079 0051 $ret:1, 
00 | 00080 0052 vValue:2, 
00 | 00081 0053 
00 | 00082 0054 tValue:2, 
00 | 00083 0055 
00 | 00084 0056 distancia:2, 
00 | 00085 0057 
00 | 00086 0058 distanciaCADE:2, 
00 | 00087 0059 
00 | 00088 0060 lValue:2, 
00 | 00089 0061 
00 | 00090 0062 flag:1, 
00 | 00091 0063 generica:25, 
00 | 00092 0064 
00 | 00093 0065 
00 | 00094 0066 
00 | 00095 0067 
00 | 00096 0068 
00 | 00097 0069 
00 | 00098 0070 
00 | 00099 0071 
00 | 00100 0072 
00 | 00101 0073 
00 | 00102 0074 
00 | 00103 0075 
00 | 00104 0076 
00 | 00105 0077 
00 | 00106 0078 
00 | 00107 0079 
00 | 00108 0080 
00 | 00109 0081 
00 | 00110 0082 
00 | 00111 0083 
00 | 00112 0084 
00 | 00113 0085 
00 | 00114 0086 
00 | 00115 0087 
00 | 00116 0088 cadevc:25, 
00 | 00117 0089 
00 | 00118 0090 
00 | 00119 0091 
00 | 00120 0092 
00 | 00121 0093 
00 | 00122 0094 
00 | 00123 0095 
00 | 00124 0096 
00 | 00125 0097 
00 | 00126 0098 
00 | 00127 0099 
00 | 00128 0100 
00 | 00129 0101 
00 | 00130 0102 
00 | 00131 0103 
00 | 00132 0104 
00 | 00133 0105 
00 | 00134 0106 
00 | 00135 0107 
00 | 00136 0108 
00 | 00137 0109 
00 | 00138 0110 
00 | 00139 0111 
00 | 00140 0112 
00 | 00141 0113 rota:25, 
00 | 00142 0114 
00 | 00143 0115 
00 | 00144 0116 
00 | 00145 0117 
00 | 00146 0118 
00 | 00147 0119 
00 | 00148 0120 
00 | 00149 0121 
00 | 00150 0122 
00 | 00151 0123 
00 | 00152 0124 
00 | 00153 0125 
00 | 00154 0126 
00 | 00155 0127 
00 | 00156 0128 
00 | 00157 0129 
00 | 00158 0130 
00 | 00159 0131 
00 | 00160 0132 
00 | 00161 0133 
00 | 00162 0134 
00 | 00163 0135 
00 | 00164 0136 
00 | 00165 0137 
00 | 00166 0138 acende:25, 
00 | 00167 0139 
00 | 00168 0140 
00 | 00169 0141 
00 | 00170 0142 
00 | 00171 0143 
00 | 00172 0144 
00 | 00173 0145 
00 | 00174 0146 
00 | 00175 0147 
00 | 00176 0148 
00 | 00177 0149 
00 | 00178 0150 
00 | 00179 0151 
00 | 00180 0152 
00 | 00181 0153 
00 | 00182 0154 
00 | 00183 0155 
00 | 00184 0156 
00 | 00185 0157 
00 | 00186 0158 
00 | 00187 0159 
00 | 00188 0160 
00 | 00189 0161 
00 | 00190 0162 
00 | 00191 0163 ParAnd_flag[2], 
00 | 00192 0164 
00 | 00193 0165 i:1, 
00 | 00194 0166 __i_0x8507af8:1, 
00 | 00195 0167 ack:1, 
d1 | 00196 d1 set_c ushort 16 1281          | config gate TEMP with 1 await(s) - 0x0501 = 1281
10 | 00197 10 
05 | 00198 05 
01 | 00199 01 
d1 | 00200 d1 set_c ushort 20 1537          | config gate PHOTO with 1 await(s) - 0x0601 = 1537
14 | 00201 14 
06 | 00202 06 
01 | 00203 01 
d1 | 00204 d1 set_c ushort 24 1793          | config gate VOLTS with 1 await(s) - 0x0701 = 1793
18 | 00205 18 
07 | 00206 07 
01 | 00207 01 
d1 | 00208 d1 set_c ushort 28 10497         | config gate SEND_DONE with 1 await(s) - 0x2901 = 10497
1c | 00209 1c 
29 | 00210 29 
01 | 00211 01 
d1 | 00212 d1 set_c ushort 32 11009         | config gate SEND_DONE_ACK with 1 await(s) - 0x2b01 = 11009
20 | 00213 20 
2b | 00214 2b 
01 | 00215 01 
d1 | 00216 d1 set_c ushort 36 11395         | config gate RECEIVE() with 3 await(s) - 0x2c83 = 11395
24 | 00217 24 
2c | 00218 2c 
83 | 00219 83 
d1 | 00220 d1 set_c ushort 47 11777         | config gate Q_READY with 1 await(s) - 0x2e01 = 11777
2f | 00221 2f 
2e | 00222 2e 
01 | 00223 01 
c5 | 00224 c5 set_c short 56 99             | distancia = 99
38 | 00225 38 
63 | 00226 63 
c5 | 00227 c5 set_c short 58 99             | distanciaCADE = 99
3a | 00228 3a 
63 | 00229 63 
c4 | 00230 c4 set_c byte 62 0               | flag = 0
3e | 00231 3e 
00 | 00232 00 
89 | 00233 89 tkins_max 0 8                 | insert track ParEver_sub_1_8
00 | 00234 .00 addr:249
f9 | 00235 .08 
89 | 00236 89 tkins_max 0 9                 | insert track ParEver_sub_2_9
01 | 00237 .00 addr:398
8e | 00238 .09 
89 | 00239 89 tkins_max 0 10                | insert track ParEver_sub_3_10
01 | 00240 .00 addr:506
fa | 00241 .0a 
89 | 00242 89 tkins_max 0 11                | insert track ParEver_sub_4_11
02 | 00243 .00 addr:609
61 | 00244 .0b 
89 | 00245 89 tkins_max 0 12                | insert track ParEver_sub_5_12
02 | 00246 .00 addr:664
98 | 00247 .0c 
01 | 00248 01 end                           | end
48 | 00249 48 memclr 163 2                  | clear gates from addr 163 to addr 164
a3 | 00250 a3 
02 | 00251 02 
89 | 00252 89 tkins_max 0 19                | insert track ParAnd_sub_1_19
01 | 00253 .00 addr:259
03 | 00254 .13 
89 | 00255 89 tkins_max 0 20                | insert track ParAnd_sub_2_20
01 | 00256 .00 addr:362
6a | 00257 .14 
01 | 00258 01 end                           | end
26 | 00259 26 outevt_z 11                   | emit REQ_VOLTS
0b | 00260 0b 
26 | 00261 26 outevt_z 9                    | emit REQ_TEMP
09 | 00262 09 
26 | 00263 26 outevt_z 10                   | emit REQ_PHOTO
0a | 00264 0a 
d1 | 00265 d1 set_c ushort 26 29            | await VOLTS[0]
1a | 00266 1a 
01 | 00267 .00 addr:270
0e | 00268 .1d 
01 | 00269 01 end                           | end
5c | 00270 5c getextdt_v 52 2               | getExtData vValue 2
34 | 00271 34 
02 | 00272 02 
d1 | 00273 d1 set_c ushort 18 30            | await TEMP[0]
12 | 00274 12 
01 | 00275 .00 addr:278
16 | 00276 .1e 
01 | 00277 01 end                           | end
5c | 00278 5c getextdt_v 54 2               | getExtData tValue 2
36 | 00279 36 
02 | 00280 02 
d1 | 00281 d1 set_c ushort 22 31            | await PHOTO[0]
16 | 00282 16 
01 | 00283 .00 addr:286
1e | 00284 .1f 
01 | 00285 01 end                           | end
5c | 00286 5c getextdt_v 60 2               | getExtData lValue 2
3c | 00287 3c 
02 | 00288 02 
40 | 00289 40 push_c 0                      | push 0
00 | 00290 00 
94 | 00291 94 push_v byte 62                | push flag:byte
3e | 00292 3e 
0f | 00293 0f eq                            | eq
4f | 00294 4f ifelse 40 41                  | ifelse True_40 EndIf_41
01 | 00295 .00 addr:299
2b | 00296 .28 
01 | 00297 .00 addr:356
64 | 00298 .29 
41 | 00299 41 push_c 990                    | push 990
03 | 00300 03 
de | 00301 de 
95 | 00302 95 push_v short 52               | push vValue:short
34 | 00303 34 
14 | 00304 14 lt                            | lt
41 | 00305 41 push_c 1010                   | push 1010
03 | 00306 03 
f2 | 00307 f2 
95 | 00308 95 push_v short 52               | push vValue:short
34 | 00309 34 
13 | 00310 13 gt                            | gt
15 | 00311 15 lor                           | lor
4f | 00312 4f ifelse 38 39                  | ifelse True_38 EndIf_39
01 | 00313 .00 addr:317
3d | 00314 .26 
01 | 00315 .00 addr:356
64 | 00316 .29 
40 | 00317 40 push_c 10                     | push 10
0a | 00318 0a 
95 | 00319 95 push_v short 60               | push lValue:short
3c | 00320 3c 
09 | 00321 09 div                           | div
a5 | 00322 a5 pop short 74                  | pop generica.lus
4a | 00323 4a 
40 | 00324 40 push_c 10                     | push 10
0a | 00325 0a 
40 | 00326 40 push_c 10                     | push 10
0a | 00327 0a 
95 | 00328 95 push_v short 54               | push tValue:short
36 | 00329 36 
09 | 00330 09 div                           | div
07 | 00331 07 mod                           | mod
a0 | 00332 a0 pop ubyte 76                  | pop generica.temp
4c | 00333 4c 
24 | 00334 24 func 0                        | func getNodeId
00 | 00335 00 
a1 | 00336 a1 pop ushort 64                 | pop generica.source
40 | 00337 40 
d1 | 00338 d1 set_c ushort 66 0xffff        | generica.target = 0xffff
42 | 00339 42 
ff | 00340 ff 
ff | 00341 ff 
c0 | 00342 c0 set_c ubyte 63 2              | generica.type = 2
3f | 00343 3f 
02 | 00344 02 
c5 | 00345 c5 set_c short 70 0              | generica.distanciaFrenteCADE = 0
46 | 00346 46 
00 | 00347 00 
40 | 00348 40 push_c 63                     | push_c &generica:msgGenerica
3f | 00349 3f 
24 | 00350 24 func 10                       | func qPut
0a | 00351 0a 
17 | 00352 17 popx                          | popx 
39 | 00353 39 exec 39                       | goto  39
01 | 00354 .00 addr:356
64 | 00355 .29 
c0 | 00356 c0 set_c ubyte 163 1             | open gate 1
a3 | 00357 a3 
01 | 00358 01 
39 | 00359 39 exec 21                       | goto  21
01 | 00360 .00 addr:376
78 | 00361 .15 
29 | 00362 29 clken_c 0 1000 42             | clock enable Awake_1000_42 1000msec
03 | 00363 03 
00 | 00364 00 
03 | 00365 03 
e8 | 00366 e8 
01 | 00367 .00 addr:370
72 | 00368 .2a 
01 | 00369 01 end                           | end
c0 | 00370 c0 set_c ubyte 164 1             | open gate 2
a4 | 00371 a4 
01 | 00372 01 
39 | 00373 39 exec 21                       | goto  21
01 | 00374 .00 addr:376
78 | 00375 .15 
3a | 00376 3a chkret 163                    | ParAnd_out_22 -- if (gate 0 == 0) PC=PC+1
a3 | 00377 a3 
01 | 00378 01 end                           | end
3a | 00379 3a chkret 164                    | ParAnd_out_22 -- if (gate 1 == 0) PC=PC+1
a4 | 00380 a4 
01 | 00381 01 end                           | end
39 | 00382 39 exec 16                       | goto  16
00 | 00383 .00 addr:249
f9 | 00384 .10 
48 | 00385 48 memclr 0 8                    | clear WClocks gates from 0 to 1
00 | 00386 00 
08 | 00387 08 
48 | 00388 48 memclr 18 2                   | clear EXT gates for TEMP
12 | 00389 12 
02 | 00390 02 
48 | 00391 48 memclr 22 2                   | clear EXT gates for PHOTO
16 | 00392 16 
02 | 00393 02 
48 | 00394 48 memclr 26 2                   | clear EXT gates for VOLTS
1a | 00395 1a 
02 | 00396 02 
01 | 00397 01 end                           | end
40 | 00398 40 push_c 2                      | push 2
02 | 00399 02 
a0 | 00400 a0 pop ubyte 38                  | evt RECEIVE() auxId = pop
26 | 00401 26 
d1 | 00402 d1 set_c ushort 39 46            | await RECEIVE()[0]
27 | 00403 27 
01 | 00404 .00 addr:407
97 | 00405 .2e 
01 | 00406 01 end                           | end
5c | 00407 5c getextdt_v 88 25              | getExtData cadevc 25
58 | 00408 58 
19 | 00409 19 
24 | 00410 24 func 0                        | func getNodeId
00 | 00411 00 
95 | 00412 95 push_v short 99                     | push cadevc.lus [Optm:: push_c addr + deref]
63 | 00413 63 
0f | 00414 0f eq                            | eq
4f | 00415 4f ifelse 61 62                  | ifelse True_61 False_62
01 | 00416 .00 addr:420
a4 | 00417 .3d 
01 | 00418 .00 addr:454
c6 | 00419 .3e 
2a | 00420 2a set_v short 74 short 99       | generica.lus = cadevc.lus
55 | 00421 55 
4a | 00422 4a 
63 | 00423 63 
2a | 00424 2a set_v ubyte 76 ubyte 101      | generica.temp = cadevc.temp
00 | 00425 00 
4c | 00426 4c 
65 | 00427 65 
24 | 00428 24 func 0                        | func getNodeId
00 | 00429 00 
a1 | 00430 a1 pop ushort 64                 | pop generica.source
40 | 00431 40 
d1 | 00432 d1 set_c ushort 66 0xffff        | generica.target = 0xffff
42 | 00433 42 
ff | 00434 ff 
ff | 00435 ff 
c0 | 00436 c0 set_c ubyte 63 1              | generica.type = 1
3f | 00437 3f 
01 | 00438 01 
2a | 00439 2a set_v short 72 ushort 64      | generica.proximosalto = generica.source
51 | 00440 51 
48 | 00441 48 
40 | 00442 40 
c5 | 00443 c5 set_c short 68 0              | generica.distanciaFrente = 0
44 | 00444 44 
00 | 00445 00 
40 | 00446 40 push_c 63                     | push_c &generica:msgGenerica
3f | 00447 3f 
24 | 00448 24 func 10                       | func qPut
0a | 00449 0a 
17 | 00450 17 popx                          | popx 
39 | 00451 39 exec 63                       | goto  63
01 | 00452 .00 addr:398
8e | 00453 .2b 
95 | 00454 95 push_v short 58               | push distanciaCADE:short
3a | 00455 3a 
95 | 00456 95 push_v short 95                     | push cadevc.distanciaFrenteCADE [Optm:: push_c addr + deref]
5f | 00457 5f 
14 | 00458 14 lt                            | lt
4f | 00459 4f ifelse 59 60                  | ifelse True_59 EndIf_60
01 | 00460 .00 addr:464
d0 | 00461 .3b 
01 | 00462 .00 addr:398
8e | 00463 .2b 
2a | 00464 2a set_v short 74 short 99       | generica.lus = cadevc.lus
55 | 00465 55 
4a | 00466 4a 
63 | 00467 63 
2a | 00468 2a set_v ubyte 76 ubyte 101      | generica.temp = cadevc.temp
00 | 00469 00 
4c | 00470 4c 
65 | 00471 65 
40 | 00472 40 push_c 1                      | push 1
01 | 00473 01 
95 | 00474 95 push_v short 95                     | push cadevc.distanciaFrenteCADE [Optm:: push_c addr + deref]
5f | 00475 5f 
06 | 00476 06 add                           | add
a5 | 00477 a5 pop short 58                  | pop distanciaCADE
3a | 00478 3a 
2a | 00479 2a set_v short 70 short 58       | generica.distanciaFrenteCADE = distanciaCADE
55 | 00480 55 
46 | 00481 46 
3a | 00482 3a 
24 | 00483 24 func 0                        | func getNodeId
00 | 00484 00 
a1 | 00485 a1 pop ushort 64                 | pop generica.source
40 | 00486 40 
c0 | 00487 c0 set_c ubyte 63 2              | generica.type = 2
3f | 00488 3f 
02 | 00489 02 
d1 | 00490 d1 set_c ushort 66 0xffff        | generica.target = 0xffff
42 | 00491 42 
ff | 00492 ff 
ff | 00493 ff 
40 | 00494 40 push_c 63                     | push_c &generica:msgGenerica
3f | 00495 3f 
24 | 00496 24 func 10                       | func qPut
0a | 00497 0a 
17 | 00498 17 popx                          | popx 
39 | 00499 39 exec 60                       | goto  60
01 | 00500 .00 addr:398
8e | 00501 .2b 
48 | 00502 48 memclr 38 2                   | clear EXT gates for RECEIVE()
26 | 00503 26 
02 | 00504 02 
01 | 00505 01 end                           | end
40 | 00506 40 push_c 1                      | push 1
01 | 00507 01 
a0 | 00508 a0 pop ubyte 41                  | evt RECEIVE() auxId = pop
29 | 00509 29 
d1 | 00510 d1 set_c ushort 42 67            | await RECEIVE()[1]
2a | 00511 2a 
02 | 00512 .00 addr:515
03 | 00513 .43 
01 | 00514 01 end                           | end
5c | 00515 5c getextdt_v 113 25             | getExtData rota 25
71 | 00516 71 
19 | 00517 19 
41 | 00518 41 push_c 990                    | push 990
03 | 00519 03 
de | 00520 de 
95 | 00521 95 push_v short 52               | push vValue:short
34 | 00522 34 
14 | 00523 14 lt                            | lt
41 | 00524 41 push_c 1010                   | push 1010
03 | 00525 03 
f2 | 00526 f2 
95 | 00527 95 push_v short 52               | push vValue:short
34 | 00528 34 
13 | 00529 13 gt                            | gt
15 | 00530 15 lor                           | lor
4f | 00531 4f ifelse 80 81                  | ifelse True_80 False_81
02 | 00532 .00 addr:536
18 | 00533 .50 
02 | 00534 .00 addr:561
31 | 00535 .51 
24 | 00536 24 func 0                        | func getNodeId
00 | 00537 00 
a1 | 00538 a1 pop ushort 64                 | pop generica.source
40 | 00539 40 
2a | 00540 2a set_v ushort 66 short 122     | generica.target = rota.proximosalto
15 | 00541 15 
42 | 00542 42 
7a | 00543 7a 
c0 | 00544 c0 set_c ubyte 63 3              | generica.type = 3
3f | 00545 3f 
03 | 00546 03 
c5 | 00547 c5 set_c short 68 0              | generica.distanciaFrente = 0
44 | 00548 44 
00 | 00549 00 
40 | 00550 40 push_c 63                     | push_c &generica:msgGenerica
3f | 00551 3f 
24 | 00552 24 func 10                       | func qPut
0a | 00553 0a 
17 | 00554 17 popx                          | popx 
c4 | 00555 c4 set_c byte 62 1               | flag = 1
3e | 00556 3e 
01 | 00557 01 
39 | 00558 39 exec 82                       | goto  82
01 | 00559 .00 addr:506
fa | 00560 .40 
95 | 00561 95 push_v short 56               | push distancia:short
38 | 00562 38 
95 | 00563 95 push_v short 118                    | push rota.distanciaFrente [Optm:: push_c addr + deref]
76 | 00564 76 
14 | 00565 14 lt                            | lt
4f | 00566 4f ifelse 78 79                  | ifelse True_78 EndIf_79
02 | 00567 .00 addr:571
3b | 00568 .4e 
01 | 00569 .00 addr:506
fa | 00570 .40 
40 | 00571 40 push_c 1                      | push 1
01 | 00572 01 
95 | 00573 95 push_v short 118                    | push rota.distanciaFrente [Optm:: push_c addr + deref]
76 | 00574 76 
06 | 00575 06 add                           | add
a5 | 00576 a5 pop short 56                  | pop distancia
38 | 00577 38 
2a | 00578 2a set_v short 68 short 56       | generica.distanciaFrente = distancia
55 | 00579 55 
44 | 00580 44 
38 | 00581 38 
c0 | 00582 c0 set_c ubyte 63 1              | generica.type = 1
3f | 00583 3f 
01 | 00584 01 
24 | 00585 24 func 0                        | func getNodeId
00 | 00586 00 
a1 | 00587 a1 pop ushort 64                 | pop generica.source
40 | 00588 40 
2a | 00589 2a set_v short 72 ushort 114     | generica.proximosalto = rota.source
51 | 00590 51 
48 | 00591 48 
72 | 00592 72 
d1 | 00593 d1 set_c ushort 66 0xffff        | generica.target = 0xffff
42 | 00594 42 
ff | 00595 ff 
ff | 00596 ff 
40 | 00597 40 push_c 63                     | push_c &generica:msgGenerica
3f | 00598 3f 
24 | 00599 24 func 10                       | func qPut
0a | 00600 0a 
17 | 00601 17 popx                          | popx 
39 | 00602 39 exec 79                       | goto  79
01 | 00603 .00 addr:506
fa | 00604 .40 
48 | 00605 48 memclr 38 2                   | clear EXT gates for RECEIVE()
26 | 00606 26 
02 | 00607 02 
01 | 00608 01 end                           | end
40 | 00609 40 push_c 3                      | push 3
03 | 00610 03 
a0 | 00611 a0 pop ubyte 44                  | evt RECEIVE() auxId = pop
2c | 00612 2c 
d1 | 00613 d1 set_c ushort 45 86            | await RECEIVE()[2]
2d | 00614 2d 
02 | 00615 .00 addr:618
6a | 00616 .56 
01 | 00617 01 end                           | end
5c | 00618 5c getextdt_v 138 25             | getExtData acende 25
8a | 00619 8a 
19 | 00620 19 
24 | 00621 24 func 0                        | func getNodeId
00 | 00622 00 
95 | 00623 95 push_v short 74                     | push generica.lus [Optm:: push_c addr + deref]
4a | 00624 4a 
0f | 00625 0f eq                            | eq
4f | 00626 4f ifelse 95 96                  | ifelse True_95 False_96
02 | 00627 .00 addr:631
77 | 00628 .5f 
02 | 00629 .00 addr:638
7e | 00630 .60 
90 | 00631 90 push_v ubyte 76                     | push generica.temp [Optm:: push_c addr + deref]
4c | 00632 4c 
25 | 00633 25 outevt_e 5                    | emit LEDS
05 | 00634 05 
39 | 00635 39 exec 97                       | goto  97
02 | 00636 .00 addr:609
61 | 00637 .53 
58 | 00638 58 outevt_c 5 1                  | emit LEDS len=1 const=1
05 | 00639 05 
01 | 00640 01 
24 | 00641 24 func 0                        | func getNodeId
00 | 00642 00 
a1 | 00643 a1 pop ushort 64                 | pop generica.source
40 | 00644 40 
2a | 00645 2a set_v ushort 66 short 72      | generica.target = generica.proximosalto
15 | 00646 15 
42 | 00647 42 
48 | 00648 48 
c0 | 00649 c0 set_c ubyte 63 3              | generica.type = 3
3f | 00650 3f 
03 | 00651 03 
40 | 00652 40 push_c 63                     | push_c &generica:msgGenerica
3f | 00653 3f 
24 | 00654 24 func 10                       | func qPut
0a | 00655 0a 
17 | 00656 17 popx                          | popx 
39 | 00657 39 exec 97                       | goto  97
02 | 00658 .00 addr:609
61 | 00659 .53 
48 | 00660 48 memclr 38 2                   | clear EXT gates for RECEIVE()
26 | 00661 26 
02 | 00662 02 
01 | 00663 01 end                           | end
d1 | 00664 d1 set_c ushort 49 101           | await Q_READY[0]
31 | 00665 31 
02 | 00666 .00 addr:669
9d | 00667 .65 
01 | 00668 01 end                           | end
40 | 00669 40 push_c 0                      | push 0
00 | 00670 00 
24 | 00671 24 func 12                       | func qSize
0c | 00672 0c 
0f | 00673 0f eq                            | eq
4f | 00674 4f ifelse 105 106                | ifelse True_105 EndIf_106
02 | 00675 .00 addr:679
a7 | 00676 .69 
02 | 00677 .00 addr:687
af | 00678 .6a 
3d | 00679 3d tkins_z 1 10 104              | insert track Loop_out_104 tree 10
8a | 00680 8a 
03 | 00681 .00 addr:793
19 | 00682 .68 
01 | 00683 01 end                           | end
39 | 00684 39 exec 106                      | goto  106
02 | 00685 .00 addr:687
af | 00686 .6a 
40 | 00687 40 push_c 63                     | push_c &generica:msgGenerica
3f | 00688 3f 
24 | 00689 24 func 11                       | func qGet
0b | 00690 0b 
17 | 00691 17 popx                          | popx 
41 | 00692 41 push_c 0xffff                 | push 0xffff
ff | 00693 ff 
ff | 00694 ff 
91 | 00695 91 push_v ushort 66                     | push generica.target [Optm:: push_c addr + deref]
42 | 00696 42 
0f | 00697 0f eq                            | eq
4f | 00698 4f ifelse 133 134                | ifelse True_133 False_134
02 | 00699 .00 addr:703
bf | 00700 .85 
02 | 00701 .00 addr:711
c7 | 00702 .86 
b1 | 00703 b1 outevt_v 40 63                | emit SEND len=25 var=generica
28 | 00704 28 
3f | 00705 3f 
d1 | 00706 d1 set_c ushort 30 112           | await SEND_DONE[0]
1e | 00707 1e 
02 | 00708 .00 addr:669
9d | 00709 .66 
01 | 00710 01 end                           | end
c0 | 00711 c0 set_c ubyte 165 0             | i = 0
a5 | 00712 a5 
00 | 00713 00 
c0 | 00714 c0 set_c ubyte 166 10            | __i_0x8507af8 = 10
a6 | 00715 a6 
0a | 00716 0a 
90 | 00717 90 push_v ubyte 166              | push __i_0x8507af8:ubyte
a6 | 00718 a6 
90 | 00719 90 push_v ubyte 165              | push i:ubyte
a5 | 00720 a5 
11 | 00721 11 gte                           | gte
4f | 00722 4f ifelse 130 131                | ifelse True_130 False_131
02 | 00723 .00 addr:727
d7 | 00724 .82 
02 | 00725 .00 addr:735
df | 00726 .83 
3d | 00727 3d tkins_z 1 16 117              | insert track Loop_out_117 tree 16
90 | 00728 90 
03 | 00729 .00 addr:784
10 | 00730 .75 
01 | 00731 01 end                           | end
39 | 00732 39 exec 132                      | goto  132
02 | 00733 .00 addr:717
cd | 00734 .73 
b1 | 00735 b1 outevt_v 41 63                | emit SEND_ACK len=25 var=generica
29 | 00736 29 
3f | 00737 3f 
d1 | 00738 d1 set_c ushort 34 125           | await SEND_DONE_ACK[0]
22 | 00739 22 
02 | 00740 .00 addr:743
e7 | 00741 .7d 
01 | 00742 01 end                           | end
5c | 00743 5c getextdt_v 167 1              | getExtData ack 1
a7 | 00744 a7 
01 | 00745 01 
40 | 00746 40 push_c 1                      | push 1
01 | 00747 01 
90 | 00748 90 push_v ubyte 167              | push ack:ubyte
a7 | 00749 a7 
0f | 00750 0f eq                            | eq
4f | 00751 4f ifelse 127 128                | ifelse True_127 EndIf_128
02 | 00752 .00 addr:756
f4 | 00753 .7f 
02 | 00754 .00 addr:764
fc | 00755 .80 
3d | 00756 3d tkins_z 1 16 117              | insert track Loop_out_117 tree 16
90 | 00757 90 
03 | 00758 .00 addr:784
10 | 00759 .75 
01 | 00760 01 end                           | end
39 | 00761 39 exec 128                      | goto  128
02 | 00762 .00 addr:764
fc | 00763 .80 
40 | 00764 40 push_c 100                    | push 100
64 | 00765 64 
24 | 00766 24 func 1                        | func random
01 | 00767 01 
09 | 00768 09 div                           | div
40 | 00769 40 push_c 100                    | push 100
64 | 00770 64 
06 | 00771 06 add                           | add
27 | 00772 27 clken_e 1 0 129               | clock enable Awake_exp_129 (stack)ms
01 | 00773 01 
01 | 00774 01 
03 | 00775 .00 addr:778
0a | 00776 .81 
01 | 00777 01 end                           | end
40 | 00778 40 push_c 165                    | push &i
a5 | 00779 a5 
60 | 00780 60 inc ubyte                     | inc ubyte
39 | 00781 39 exec 132                      | goto  132
02 | 00782 .00 addr:717
cd | 00783 .73 
48 | 00784 48 memclr 8 8                    | clear WClocks gates from 1 to 2
08 | 00785 08 
08 | 00786 08 
48 | 00787 48 memclr 34 2                   | clear EXT gates for SEND_DONE_ACK
22 | 00788 22 
02 | 00789 02 
39 | 00790 39 exec 135                      | goto  135
02 | 00791 .00 addr:669
9d | 00792 .66 
48 | 00793 48 memclr 8 8                    | clear WClocks gates from 1 to 2
08 | 00794 08 
08 | 00795 08 
48 | 00796 48 memclr 30 2                   | clear EXT gates for SEND_DONE
1e | 00797 1e 
02 | 00798 02 
48 | 00799 48 memclr 34 2                   | clear EXT gates for SEND_DONE_ACK
22 | 00800 22 
02 | 00801 02 
39 | 00802 39 exec 98                       | goto  98
02 | 00803 .00 addr:664
98 | 00804 .62 
48 | 00805 48 memclr 8 8                    | clear WClocks gates from 1 to 2
08 | 00806 08 
08 | 00807 08 
48 | 00808 48 memclr 30 2                   | clear EXT gates for SEND_DONE
1e | 00809 1e 
02 | 00810 02 
48 | 00811 48 memclr 34 2                   | clear EXT gates for SEND_DONE_ACK
22 | 00812 22 
02 | 00813 02 
48 | 00814 48 memclr 49 2                   | clear EXT gates for Q_READY
31 | 00815 31 
02 | 00816 02 
01 | 00817 01 end                           | end
48 | 00818 48 memclr 0 16                   | clear WClocks gates from 0 to 2
00 | 00819 00 
10 | 00820 10 
01 | 00821 01 end                           | end
